# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from manticore_server import ManticoreServer_pb2 as manticore__server_dot_ManticoreServer__pb2


class ManticoreServerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartNative = channel.unary_unary(
                '/manticore_server.ManticoreServer/StartNative',
                request_serializer=manticore__server_dot_ManticoreServer__pb2.NativeArguments.SerializeToString,
                response_deserializer=manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.FromString,
                )
        self.StartEVM = channel.unary_unary(
                '/manticore_server.ManticoreServer/StartEVM',
                request_serializer=manticore__server_dot_ManticoreServer__pb2.EVMArguments.SerializeToString,
                response_deserializer=manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.FromString,
                )
        self.Terminate = channel.unary_unary(
                '/manticore_server.ManticoreServer/Terminate',
                request_serializer=manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.SerializeToString,
                response_deserializer=manticore__server_dot_ManticoreServer__pb2.TerminateResponse.FromString,
                )
        self.GetStateList = channel.unary_unary(
                '/manticore_server.ManticoreServer/GetStateList',
                request_serializer=manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.SerializeToString,
                response_deserializer=manticore__server_dot_ManticoreServer__pb2.ManticoreStateList.FromString,
                )
        self.GetMessageList = channel.unary_unary(
                '/manticore_server.ManticoreServer/GetMessageList',
                request_serializer=manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.SerializeToString,
                response_deserializer=manticore__server_dot_ManticoreServer__pb2.ManticoreMessageList.FromString,
                )
        self.CheckManticoreRunning = channel.unary_unary(
                '/manticore_server.ManticoreServer/CheckManticoreRunning',
                request_serializer=manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.SerializeToString,
                response_deserializer=manticore__server_dot_ManticoreServer__pb2.ManticoreRunningStatus.FromString,
                )
        self.StopServer = channel.unary_unary(
                '/manticore_server.ManticoreServer/StopServer',
                request_serializer=manticore__server_dot_ManticoreServer__pb2.StopServerRequest.SerializeToString,
                response_deserializer=manticore__server_dot_ManticoreServer__pb2.StopServerResponse.FromString,
                )
        self.ControlState = channel.unary_unary(
                '/manticore_server.ManticoreServer/ControlState',
                request_serializer=manticore__server_dot_ManticoreServer__pb2.ControlStateRequest.SerializeToString,
                response_deserializer=manticore__server_dot_ManticoreServer__pb2.ControlStateResponse.FromString,
                )


class ManticoreServerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StartNative(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StartEVM(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Terminate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStateList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessageList(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckManticoreRunning(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopServer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ControlState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ManticoreServerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartNative': grpc.unary_unary_rpc_method_handler(
                    servicer.StartNative,
                    request_deserializer=manticore__server_dot_ManticoreServer__pb2.NativeArguments.FromString,
                    response_serializer=manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.SerializeToString,
            ),
            'StartEVM': grpc.unary_unary_rpc_method_handler(
                    servicer.StartEVM,
                    request_deserializer=manticore__server_dot_ManticoreServer__pb2.EVMArguments.FromString,
                    response_serializer=manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.SerializeToString,
            ),
            'Terminate': grpc.unary_unary_rpc_method_handler(
                    servicer.Terminate,
                    request_deserializer=manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.FromString,
                    response_serializer=manticore__server_dot_ManticoreServer__pb2.TerminateResponse.SerializeToString,
            ),
            'GetStateList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStateList,
                    request_deserializer=manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.FromString,
                    response_serializer=manticore__server_dot_ManticoreServer__pb2.ManticoreStateList.SerializeToString,
            ),
            'GetMessageList': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessageList,
                    request_deserializer=manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.FromString,
                    response_serializer=manticore__server_dot_ManticoreServer__pb2.ManticoreMessageList.SerializeToString,
            ),
            'CheckManticoreRunning': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckManticoreRunning,
                    request_deserializer=manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.FromString,
                    response_serializer=manticore__server_dot_ManticoreServer__pb2.ManticoreRunningStatus.SerializeToString,
            ),
            'StopServer': grpc.unary_unary_rpc_method_handler(
                    servicer.StopServer,
                    request_deserializer=manticore__server_dot_ManticoreServer__pb2.StopServerRequest.FromString,
                    response_serializer=manticore__server_dot_ManticoreServer__pb2.StopServerResponse.SerializeToString,
            ),
            'ControlState': grpc.unary_unary_rpc_method_handler(
                    servicer.ControlState,
                    request_deserializer=manticore__server_dot_ManticoreServer__pb2.ControlStateRequest.FromString,
                    response_serializer=manticore__server_dot_ManticoreServer__pb2.ControlStateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'manticore_server.ManticoreServer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ManticoreServer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StartNative(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/manticore_server.ManticoreServer/StartNative',
            manticore__server_dot_ManticoreServer__pb2.NativeArguments.SerializeToString,
            manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StartEVM(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/manticore_server.ManticoreServer/StartEVM',
            manticore__server_dot_ManticoreServer__pb2.EVMArguments.SerializeToString,
            manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Terminate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/manticore_server.ManticoreServer/Terminate',
            manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.SerializeToString,
            manticore__server_dot_ManticoreServer__pb2.TerminateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetStateList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/manticore_server.ManticoreServer/GetStateList',
            manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.SerializeToString,
            manticore__server_dot_ManticoreServer__pb2.ManticoreStateList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessageList(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/manticore_server.ManticoreServer/GetMessageList',
            manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.SerializeToString,
            manticore__server_dot_ManticoreServer__pb2.ManticoreMessageList.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CheckManticoreRunning(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/manticore_server.ManticoreServer/CheckManticoreRunning',
            manticore__server_dot_ManticoreServer__pb2.ManticoreInstance.SerializeToString,
            manticore__server_dot_ManticoreServer__pb2.ManticoreRunningStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopServer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/manticore_server.ManticoreServer/StopServer',
            manticore__server_dot_ManticoreServer__pb2.StopServerRequest.SerializeToString,
            manticore__server_dot_ManticoreServer__pb2.StopServerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ControlState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/manticore_server.ManticoreServer/ControlState',
            manticore__server_dot_ManticoreServer__pb2.ControlStateRequest.SerializeToString,
            manticore__server_dot_ManticoreServer__pb2.ControlStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
