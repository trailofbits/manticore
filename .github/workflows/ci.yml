name: CI

on:
  push:
    branches:
      - master
  pull_request:
  schedule:
    # run CI every day even if no PRs/merges occur
    - cron:  '0 12 * * *'

jobs:
  # needs to run only on pull_request
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Lint
      if: github.event_name == 'pull_request'
      env:
        BASE_SHA: ${{ github.event.pull_request.base.sha }}
      run: |
        pip install -e .[lint]
        black --version
        git fetch --depth=1 origin $BASE_SHA
        echo "Files Changed:"
        git diff --name-only $BASE_SHA... | tee .diff_names.txt
        cat .diff_names.txt | python scripts/pyfile_exists.py | xargs black --diff --check
        mypy --version
        mypy
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: ["ethereum_truffle", "ethereum_bench", "examples", "ethereum", "ethereum_vm", "native", "wasm", "wasm_sym", "other"]
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Install NPM
      uses: actions/setup-node@v1
      with:
        node-version: '13.x'
    - name: Install dependencies
      env:
        TEST_TYPE: ${{ matrix.type }}
      run: |
        #install cvc4
        sudo wget -O /usr/bin/cvc4 https://github.com/CVC4/CVC4/releases/download/1.7/cvc4-1.7-x86_64-linux-opt
        sudo chmod +x /usr/bin/cvc4
        #install yices
        sudo add-apt-repository ppa:sri-csl/formal-methods
        sudo apt-get update
        sudo apt-get install yices2
        # Install solc unconditionally because it only takes a second or two
        sudo wget -O /usr/bin/solc https://github.com/ethereum/solidity/releases/download/v0.4.24/solc-static-linux
        sudo chmod +x /usr/bin/solc
        pip install -e ".[dev-noks]"
    - name: Run Tests
      env:
        TEST_TYPE: ${{ matrix.type }}
      run: |
        cp scripts/run_tests.sh .
        ./run_tests.sh
    - name: Coverage Upload
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        yml: ./codecov.yml
# Disabled this line because Codecov has been extra flaky lately, and having to re-run the entire
# test suite until every coverage upload step succeeds is more of a hassle than it's worth.
#        fail_ci_if_error: true
  upload:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    needs: tests
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.6
      uses: actions/setup-python@v1
      with:
        python-version: 3.6
    - name: Build Dist
      run: |
        python3 -m pip install wheel
        python3 setup.py --dev_release sdist bdist_wheel
    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@v1.2.2
      with:
        password: ${{ secrets.PYPI_UPLOAD }}


