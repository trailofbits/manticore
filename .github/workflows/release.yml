name: Upload to PyPI

on:
  release:
    types: [published]

jobs:
  tests:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        type: ["ethereum_truffle", "ethereum_bench", "examples", "ethereum", "ethereum_vm", "native", "wasm", "wasm_sym", "other"]
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.7
      uses: actions/setup-python@v4
      with:
        python-version: 3.7
    - name: Install NPM
      uses: actions/setup-node@v3
      with:
        node-version: '16.x'
    - name: Install dependencies
      env:
        TEST_TYPE: ${{ matrix.type }}
      run: |
        #install utils
        pip install coveralls
        pip install -e ".[dev-noks]"
        #install cvc4
        sudo wget -O /usr/bin/cvc4 https://github.com/CVC4/CVC4/releases/download/1.7/cvc4-1.7-x86_64-linux-opt
        sudo chmod +x /usr/bin/cvc4
        #install yices
        sudo add-apt-repository ppa:sri-csl/formal-methods
        sudo apt-get update
        sudo apt-get install yices2
        #install boolector
        mkdir -p /tmp/build
        cd /tmp/build
        git clone https://github.com/boolector/boolector.git
        cd boolector
        # Version 3.2.1
        git checkout "f61c0dcf4a76e2f7766a6358bfb9c16ca8217224"
        git log -1 --oneline > ../boolector.commit
        ./contrib/setup-lingeling.sh
        ./contrib/setup-btor2tools.sh
        ./configure.sh
        cd build
        make -j4
        mkdir -p /tmp/boolector
        sudo make DESTDIR=/usr install
        # Install solc unconditionally because it only takes a second or two
        sudo wget -O /usr/bin/solc https://github.com/ethereum/solidity/releases/download/v0.4.24/solc-static-linux
        sudo chmod +x /usr/bin/solc
    - name: Run Tests
      env:
        TEST_TYPE: ${{ matrix.type }}
      run: |
        cp scripts/run_tests.sh .
        ./run_tests.sh

  upload:
    runs-on: ubuntu-20.04
    needs: tests
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.7
      uses: actions/setup-python@v4
      with:
        python-version: 3.7
    - name: Build Dist
      run: |
        python3 -m pip install wheel
        python3 setup.py sdist bdist_wheel
    - name: Upload to PyPI
      uses: pypa/gh-action-pypi-publish@v1.5.1
      with:
        password: ${{ secrets.PYPI_UPLOAD }}
